{"ast":null,"code":"import _regeneratorRuntime from \"/Users/seanmodd/Dev/AuthFiles/036_reset_password_functionality/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/seanmodd/Dev/AuthFiles/036_reset_password_functionality/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/seanmodd/Dev/AuthFiles/036_reset_password_functionality/client/pages/reset-password.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport firebase from \"../firebase\";\nimport { useRouter } from \"next/router\";\nimport { Context } from \"../context\";\nimport { toast } from \"react-toastify\";\n\nvar PasswordReset = function PasswordReset() {\n  _s();\n\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useContext = useContext(Context),\n      user = _useContext.state.user;\n\n  var router = useRouter();\n  useEffect(function () {\n    if (user !== null) {\n      router.push(\"/\");\n    }\n  }, [user]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var config;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n              config = {\n                url: process.env.passwordResetRedirect,\n                handleCodeInApp: true\n              };\n              _context.next = 5;\n              return firebase.auth().sendPasswordResetEmail(email, config).then(function () {\n                setEmail(\"\");\n                setLoading(false);\n                toast(\"Check your email for password reset link\");\n              })[\"catch\"](function (error) {\n                setLoading(false);\n                toast(error.message);\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-md-6 offset-md-3 p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: \"If you have already registered, you can enter your email address to receive a password reset link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: function onChange(e) {\n          return setEmail(e.target.value);\n        },\n        placeholder: \"Type your email\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        disabled: !email || loading,\n        children: loading ? \"Processing...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PasswordReset, \"imR5iJQh3siiUU6vymAYom+XZAI=\", false, function () {\n  return [useRouter];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["/Users/seanmodd/Dev/AuthFiles/036_reset_password_functionality/client/pages/reset-password.js"],"names":["useState","useEffect","useContext","firebase","useRouter","Context","toast","PasswordReset","email","setEmail","loading","setLoading","user","state","router","push","handleSubmit","e","preventDefault","config","url","process","env","passwordResetRedirect","handleCodeInApp","auth","sendPasswordResetEmail","then","error","message","target","value"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBACAP,QAAQ,CAAC,EAAD,CADR;AAAA,MACnBQ,KADmB;AAAA,MACZC,QADY;;AAAA,mBAEIT,QAAQ,CAAC,KAAD,CAFZ;AAAA,MAEnBU,OAFmB;AAAA,MAEVC,UAFU;;AAAA,oBAMtBT,UAAU,CAACG,OAAD,CANY;AAAA,MAKfO,IALe,eAKxBC,KALwB,CAKfD,IALe;;AAQ1B,MAAIE,MAAM,GAAGV,SAAS,EAAtB;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,IAAI,KAAK,IAAb,EAAmB;AACjBE,MAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD;AACF,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;;AAMA,MAAMI,YAAY;AAAA,wEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AACAP,cAAAA,UAAU,CAAC,IAAD,CAAV;AAEMQ,cAAAA,MAJa,GAIJ;AACbC,gBAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADJ;AAEbC,gBAAAA,eAAe,EAAE;AAFJ,eAJI;AAAA;AAAA,qBASbrB,QAAQ,CACXsB,IADG,GAEHC,sBAFG,CAEoBlB,KAFpB,EAE2BW,MAF3B,EAGHQ,IAHG,CAGE,YAAM;AACVlB,gBAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,gBAAAA,KAAK,CAAC,0CAAD,CAAL;AACD,eAPG,WAQG,UAACsB,KAAD,EAAW;AAChBjB,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,gBAAAA,KAAK,CAACsB,KAAK,CAACC,OAAP,CAAL;AACD,eAXG,CATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZb,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAOE;AAAM,MAAA,QAAQ,EAAEA,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAER,KAHT;AAIE,QAAA,QAAQ,EAAE,kBAACS,CAAD;AAAA,iBAAOR,QAAQ,CAACQ,CAAC,CAACa,MAAF,CAASC,KAAV,CAAf;AAAA,SAJZ;AAKE,QAAA,WAAW,EAAC,iBALd;AAME,QAAA,SAAS;AANX;AAAA;AAAA;AAAA;AAAA,eADF,eASE;AAAA;AAAA;AAAA;AAAA,eATF,eAUE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,QAAQ,EAAE,CAACvB,KAAD,IAAUE,OAAxD;AAAA,kBACGA,OAAO,GAAG,eAAH,GAAqB;AAD/B;AAAA;AAAA;AAAA;AAAA,eAVF;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAwBD,CA/DD;;GAAMH,a;UAQSH,S;;;KARTG,a;AAiEN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport firebase from \"../firebase\";\nimport { useRouter } from \"next/router\";\nimport { Context } from \"../context\";\nimport { toast } from \"react-toastify\";\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const {\n    state: { user },\n  } = useContext(Context);\n\n  let router = useRouter();\n\n  useEffect(() => {\n    if (user !== null) {\n      router.push(\"/\");\n    }\n  }, [user]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const config = {\n      url: process.env.passwordResetRedirect,\n      handleCodeInApp: true,\n    };\n\n    await firebase\n      .auth()\n      .sendPasswordResetEmail(email, config)\n      .then(() => {\n        setEmail(\"\");\n        setLoading(false);\n        toast(\"Check your email for password reset link\");\n      })\n      .catch((error) => {\n        setLoading(false);\n        toast(error.message);\n      });\n  };\n\n  return (\n    <div className=\"container col-md-6 offset-md-3 p-5\">\n      <h2>Reset Password</h2>\n      <p className=\"lead\">\n        If you have already registered, you can enter your email address to\n        receive a password reset link\n      </p>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Type your email\"\n          autoFocus\n        />\n        <br />\n        <button className=\"btn btn-primary\" disabled={!email || loading}>\n          {loading ? \"Processing...\" : \"Submit\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordReset;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/seanmodd/Dev/AuthFiles/036_reset_password_functionality/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/seanmodd/Dev/AuthFiles/036_reset_password_functionality/client/context/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import\nimport { createContext, useReducer } from \"react\"; // reducer\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case \"LOGOUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: null\n      });\n\n    default:\n      return state;\n  }\n}; // initial state\n\n\nvar intialState = {\n  user: null\n}; // create context\n\nvar Context = /*#__PURE__*/createContext({}); // context provider\n\nvar Provider = function Provider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(reducer, intialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Provider, \"OmMLnGUD43KmAt2tR/kSNvJPeko=\");\n\n_c = Provider;\nexport { Context, Provider };\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/seanmodd/Dev/AuthFiles/036_reset_password_functionality/client/context/index.js"],"names":["createContext","useReducer","reducer","state","action","type","user","payload","intialState","Context","Provider","children","dispatch","value"],"mappings":";;;;;;;;;;;AAAA;AACA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C,C,CAEA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAAhC;;AACF,SAAK,QAAL;AACE,6CAAYJ,KAAZ;AAAmBG,QAAAA,IAAI,EAAE;AAAzB;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD,C,CAWA;;;AACA,IAAMK,WAAW,GAAG;AAClBF,EAAAA,IAAI,EAAE;AADY,CAApB,C,CAIA;;AACA,IAAMG,OAAO,gBAAGT,aAAa,CAAC,EAAD,CAA7B,C,CAEA;;AACA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACPV,UAAU,CAACC,OAAD,EAAUM,WAAV,CADH;AAAA,MAC1BL,KAD0B;AAAA,MACnBS,QADmB;;AAEjC,MAAMC,KAAK,GAAG;AAAEV,IAAAA,KAAK,EAALA,KAAF;AAASS,IAAAA,QAAQ,EAARA;AAAT,GAAd;AACA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC,KAAzB;AAAA,cAAiCF;AAAjC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAJD;;GAAMD,Q;;KAAAA,Q;AAMN,SAASD,OAAT,EAAkBC,QAAlB","sourcesContent":["// import\nimport { createContext, useReducer } from \"react\";\n\n// reducer\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return { ...state, user: action.payload };\n    case \"LOGOUT\":\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n};\n\n// initial state\nconst intialState = {\n  user: null,\n};\n\n// create context\nconst Context = createContext({});\n\n// context provider\nconst Provider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, intialState);\n  const value = { state, dispatch };\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nexport { Context, Provider };\n"]},"metadata":{},"sourceType":"module"}